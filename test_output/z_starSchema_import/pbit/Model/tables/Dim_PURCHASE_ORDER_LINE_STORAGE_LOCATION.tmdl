table Dim_PURCHASE_ORDER_LINE_STORAGE_LOCATION


    column 'ITEM_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: ITEM_NUMBER

        

        annotation SummarizationSetBy = Automatic

        
    column 'SITE_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: SITE_NUMBER

        

        annotation SummarizationSetBy = Automatic

        
    column 'ITEM_NUMBER_SITE_NUMBER_Key'
        dataType: string
        summarizeBy: none
        sourceColumn: ITEM_NUMBER_SITE_NUMBER_Key

        

        annotation SummarizationSetBy = Automatic

        



    partition 'Dim_PURCHASE_ORDER_LINE_STORAGE_LOCATION' = m
        mode: import
        source = 
            let
                // Get data from PURCHASE_ORDER_LINE
                Data_From_PURCHASE_ORDER_LINE = Table.SelectColumns(PURCHASE_ORDER_LINE, {"ITEM_NUMBER", "SITE_NUMBER"}),
                // Get data from STORAGE_LOCATION
                Data_From_STORAGE_LOCATION = Table.SelectColumns(STORAGE_LOCATION, {"ITEM_NUMBER", "SITE_NUMBER"}),
                // Combine data from all source tables
                CombinedData = Table.Combine({Data_From_PURCHASE_ORDER_LINE, Data_From_STORAGE_LOCATION}),
                // Get unique combinations of dimension keys
                UniqueRows = Table.Distinct(CombinedData, {"ITEM_NUMBER", "SITE_NUMBER"}),
                // Create composite key for relationships
                AddCompositeKey = Table.AddColumn(UniqueRows, "ITEM_NUMBER_SITE_NUMBER_Key", each Text.Combine({[ITEM_NUMBER], [SITE_NUMBER]}, "|"), type text),
                // Filter out rows with null or empty composite keys
                FilteredRows = Table.SelectRows(AddCompositeKey, each [ITEM_NUMBER_SITE_NUMBER_Key] <> null and [ITEM_NUMBER_SITE_NUMBER_Key] <> "")
            in
                FilteredRows
        



    annotation PBI_ResultType = Table