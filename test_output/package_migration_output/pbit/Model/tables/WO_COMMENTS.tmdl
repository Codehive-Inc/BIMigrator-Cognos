table WO_COMMENTS


    column 'SITE'
        dataType: string
        summarizeBy: none
        sourceColumn: SITE

        

        annotation SummarizationSetBy = Automatic

        
    column 'REC_TYP'
        dataType: string
        summarizeBy: none
        sourceColumn: REC_TYP

        

        annotation SummarizationSetBy = Automatic

        
    column 'WORKORDER'
        dataType: string
        summarizeBy: none
        sourceColumn: WORKORDER

        

        annotation SummarizationSetBy = Automatic

        
    column 'COMMENTS'
        dataType: string
        summarizeBy: none
        sourceColumn: COMMENTS

        

        annotation SummarizationSetBy = Automatic

        
    column 'COMMENTS2'
        dataType: string
        summarizeBy: none
        sourceColumn: COMMENTS2

        

        annotation SummarizationSetBy = Automatic

        
    column 'LINE_NO'
        dataType: string
        summarizeBy: none
        sourceColumn: LINE_NO

        

        annotation SummarizationSetBy = Automatic

        
    column 'MODEL_TYPE'
        dataType: string
        summarizeBy: none
        sourceColumn: MODEL_TYPE

        

        annotation SummarizationSetBy = Automatic

        
    column 'MARK_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: MARK_NUMBER

        

        annotation SummarizationSetBy = Automatic

        



    partition 'WO_COMMENTS' = m
        mode: import
        source = 
            	let
					Source = Sql.Database(#"DB Server", #"DB Name"),
					// Validate connection
ValidateConnection = try Source otherwise error 
"Failed to connect to database. Error: " & Text.From([Error][Message]),
					// Execute query with folding
ExecuteQuery = Value.NativeQuery(
ValidateConnection, 
"Select",
null,
[EnableFolding=true]
),
					// Validate results
ValidateResults = if Table.IsEmpty(ExecuteQuery) then error "No data returned from query for table WO_COMMENTS" else ExecuteQuery,
					// Apply data type transformations
TransformTypes = Table.TransformColumnTypes( ValidateResults, { {"$SITE", type string}, {"$REC_TYP", type string}, {"$WORKORDER", type string}, {"$COMMENTS", type string}, {"$COMMENTS2", type string}, {"$LINE_NO", type string}, {"$MODEL_TYPE", type string}, {"$MARK_NUMBER", type string}, {"$SITE", type string}, {"$REC_TYP", type string}, {"$WORKORDER", type string}, {"$COMMENTS", type string}, {"$COMMENTS2", type string}, {"$LINE_NO", type string}, {"$MODEL_TYPE", type string}, {"$MARK_NUMBER", type string} } ),
					// Handle nulls appropriately
HandleNulls = Table.ReplaceValue( TransformTypes, null, "", Replacer.ReplaceValue, Table.ColumnNames(TransformTypes) )
				in
					HandleNulls
        



    annotation PBI_ResultType = Table