table INVENTORY_ADJUSTMENTS


    column 'ITEM_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: ITEM_NUMBER

        

        annotation SummarizationSetBy = Automatic

        
    column 'SITE_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: SITE_NUMBER

        

        annotation SummarizationSetBy = Automatic

        
    column 'BUDGET_UNIT'
        dataType: string
        summarizeBy: none
        sourceColumn: BUDGET_UNIT

        

        annotation SummarizationSetBy = Automatic

        
    column 'DATE_COUNTED'
        dataType: dateTime
        summarizeBy: none
        sourceColumn: DATE_COUNTED

        

        annotation SummarizationSetBy = Automatic

        
    column 'DATE_INV_UPDATED'
        dataType: dateTime
        summarizeBy: none
        sourceColumn: DATE_INV_UPDATED

        

        annotation SummarizationSetBy = Automatic

        
    column 'STATUS_DATE'
        dataType: dateTime
        summarizeBy: none
        sourceColumn: STATUS_DATE

        

        annotation SummarizationSetBy = Automatic

        
    column 'DOCUMENT_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: DOCUMENT_NUMBER

        

        annotation SummarizationSetBy = Automatic

        
    column 'JOB_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: JOB_NUMBER

        

        annotation SummarizationSetBy = Automatic

        
    column 'UNIT_PRICE'
        dataType: int64
        summarizeBy: none
        sourceColumn: UNIT_PRICE

        

        annotation SummarizationSetBy = Automatic

        
    column 'QTY_COUNTED'
        dataType: int64
        summarizeBy: none
        sourceColumn: QTY_COUNTED

        

        annotation SummarizationSetBy = Automatic

        
    column 'QTY_RECONCILED'
        dataType: int64
        summarizeBy: none
        sourceColumn: QTY_RECONCILED

        

        annotation SummarizationSetBy = Automatic

        
    column 'STATUS'
        dataType: string
        summarizeBy: none
        sourceColumn: STATUS

        

        annotation SummarizationSetBy = Automatic

        
    column 'BADGE_NUMBER'
        dataType: string
        summarizeBy: none
        sourceColumn: BADGE_NUMBER

        

        annotation SummarizationSetBy = Automatic

        
    column 'UNIT_OF_MEASURE'
        dataType: string
        summarizeBy: none
        sourceColumn: UNIT_OF_MEASURE

        

        annotation SummarizationSetBy = Automatic

        
    column 'STOP'
        dataType: string
        summarizeBy: none
        sourceColumn: STOP

        

        annotation SummarizationSetBy = Automatic

        

    measure 'INVENTORY_ADJUSTMENTS - Count by DATE_COUNTED' = ```
            CALCULATE(
    COUNTROWS('INVENTORY_ADJUSTMENTS'),
    USERELATIONSHIP('CentralDateTable'[Date], 'INVENTORY_ADJUSTMENTS'[DATE_COUNTED])
)
    ```


        annotation PBI_FormatHint = {"isGeneralNumber":true}
        
    measure 'INVENTORY_ADJUSTMENTS - Count by DATE_INV_UPDATED' = ```
            CALCULATE(
    COUNTROWS('INVENTORY_ADJUSTMENTS'),
    USERELATIONSHIP('CentralDateTable'[Date], 'INVENTORY_ADJUSTMENTS'[DATE_INV_UPDATED])
)
    ```


        annotation PBI_FormatHint = {"isGeneralNumber":true}
        
    measure 'INVENTORY_ADJUSTMENTS - Count by STATUS_DATE' = ```
            CALCULATE(
    COUNTROWS('INVENTORY_ADJUSTMENTS'),
    USERELATIONSHIP('CentralDateTable'[Date], 'INVENTORY_ADJUSTMENTS'[STATUS_DATE])
)
    ```


        annotation PBI_FormatHint = {"isGeneralNumber":true}
        


    partition 'INVENTORY_ADJUSTMENTS' = m
        mode: import
        source = 
            	let
					Source = Sql.Database(#"DB Server", #"DB Name"),
					// Validate connection
ValidateConnection = try Source otherwise error 
"Failed to connect to database. Error: " & Text.From([Error][Message]),
					// Execute query with folding
ExecuteQuery = Value.NativeQuery(
ValidateConnection, 
"Select",
null,
[EnableFolding=true]
),
					// Validate results
ValidateResults = if Table.IsEmpty(ExecuteQuery) then error "No data returned from query for table INVENTORY_ADJUSTMENTS" else ExecuteQuery,
					// Apply data type transformations
TransformTypes = Table.TransformColumnTypes( ValidateResults, { {"$ITEM_NUMBER", type string}, {"$SITE_NUMBER", type string}, {"$BUDGET_UNIT", type string}, {"$DATE_COUNTED", type datetime}, {"$DATE_INV_UPDATED", type datetime}, {"$STATUS_DATE", type datetime}, {"$DOCUMENT_NUMBER", type string}, {"$JOB_NUMBER", type string}, {"$UNIT_PRICE", type int64}, {"$QTY_COUNTED", type int64}, {"$QTY_RECONCILED", type int64}, {"$STATUS", type string}, {"$BADGE_NUMBER", type string}, {"$UNIT_OF_MEASURE", type string}, {"$STOP", type string}, {"$ITEM_NUMBER", type string}, {"$SITE_NUMBER", type string}, {"$BUDGET_UNIT", type string}, {"$DATE_COUNTED", type datetime}, {"$DATE_INV_UPDATED", type datetime}, {"$STATUS_DATE", type datetime}, {"$DOCUMENT_NUMBER", type string}, {"$JOB_NUMBER", type string}, {"$UNIT_PRICE", type int64}, {"$QTY_COUNTED", type int64}, {"$QTY_RECONCILED", type int64}, {"$STATUS", type string}, {"$BADGE_NUMBER", type string}, {"$UNIT_OF_MEASURE", type string}, {"$STOP", type string} } ),
					// Handle nulls appropriately
HandleNulls = Table.ReplaceValue( TransformTypes, null, "", Replacer.ReplaceValue, Table.ColumnNames(TransformTypes) )
				in
					HandleNulls
        



    annotation PBI_ResultType = Table